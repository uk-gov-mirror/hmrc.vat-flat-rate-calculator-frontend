# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

appName = "vat-flat-rate-calculator-frontend"
application.router=prod.Routes

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# HTTP client module
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.FrontendModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.FrontendFilters"

play.filters.headers.contentSecurityPolicy= "default-src 'self' 'unsafe-inline' localhost:9000 localhost:9250 localhost:9032 www.google-analytics.com data:"

# Custom error handler
play.http.errorHandler = "config.AppErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "config.DIModule"

#play.http.session.maxAge = 10000

# CSRF Bypass on submit
# ~~~
# Added bypass for Csrf-Token when set to nocheck. This solves a play 2.5 upgrade issue where Bad CSRF Token message was displayed instead of session timeout.
play.filters.csrf.header.bypassHeaders {
   X-Requested-With = "*"
   Csrf-Token = "nocheck"
}

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
#play.crypto.secret="YHYlZtRjIXHrlN7p4T1p2f6D5GAd6RiNFJ0xSQIuhjsKXsqAn9mXumyItoyLJzv2"

microservice {
    metrics {
        graphite {
            host = localhost
            port = 8100
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {
      cachable.session-cache {
        host = localhost
        port = 8400
        domain = keystore
      }

      contact-frontend {
        host=localhost
        port=9250
      }
    }
}

metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}

auditing {
  enabled=true
  traceRequests=true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token= "UA-43414424-24"
  host=auto
}

assets {
  version = "3.2.2"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

contact-frontend {
  host = "http://localhost:9250"
}

business-tax-account {
  url = "http://localhost:9020/business-account"
}